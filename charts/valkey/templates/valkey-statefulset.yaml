apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: drycc-valkey
  labels:
    heritage: drycc
  annotations:
    component.drycc.cc/version: {{ .Values.imageTag }}
spec:
  serviceName: drycc-valkey
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: drycc-valkey
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app: drycc-valkey
    spec:
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset.type "component" "" "extraMatchLabels" .Values.podAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset.type "component" "" "extraMatchLabels" .Values.podAntiAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values ) | nindent 10 }}
      containers:
      - name: drycc-valkey-proxy
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/valkey:{{ .Values.imageTag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 10 }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 10 }}
        {{- else }}
        args:
        - valkey-start
        - proxy
        {{- end }}
        env:
        - name: DRYCC_VALKEY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: valkey-creds
              key: password
        - name: DRYCC_VALKEY_SENTINEL
          value: drycc-valkey
        ports:
        - containerPort: 16379
        {{- with index .Values "proxy" "resources" }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        startupProbe:
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 22
          tcpSocket:
            port: 16379
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          tcpSocket:
            port: 16379
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          tcpSocket:
            port: 16379
      - name: drycc-valkey-server
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/valkey:{{ .Values.imageTag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 10 }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 10 }}
        {{- else }}
        args:
        - valkey-start
        - server
        - $(POD_NAME).drycc-valkey
        {{- end }}
        ports:
        - containerPort: 6379
        {{- with index .Values "server" "resources" }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DRYCC_VALKEY_SENTINEL
          value: drycc-valkey
        - name: DRYCC_VALKEY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: valkey-creds
              key: password
        startupProbe:
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 22
          tcpSocket:
            port: 6379
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
              - init-stack
              - sh
              - -c
              - /scripts/ping_liveness_local.sh 5
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
              - init-stack
              - sh
              - -c
              - /scripts/ping_readiness_local.sh 1
        {{- if .Values.persistence.enabled }}
        volumeMounts:
        - name: valkey-data
          mountPath: /data
        {{- end }}
        lifecycle:
          preStop:
            exec:
              command:
                - init-stack
                - /bin/bash
                - -c
                - /scripts/prestop-valkey.sh
      - name: drycc-valkey-sentinel
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/valkey:{{ .Values.imageTag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 10 }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 10 }}
        {{- else }}
        args:
        - valkey-start
        - sentinel
        - $(POD_NAME).drycc-valkey
        {{- end }}
        ports:
        - containerPort: 26379
        {{- with index .Values "sentinel" "resources" }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DRYCC_VALKEY_SENTINEL
          value: drycc-valkey
        - name: DRYCC_VALKEY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: valkey-creds
              key: password
        startupProbe:
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 22
          tcpSocket:
            port: 26379
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - init-stack
            - sh
            - -c
            - /scripts/ping_sentinel.sh 5
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - init-stack
            - sh
            - -c
            - /scripts/ping_sentinel.sh 1
        {{- if .Values.persistence.enabled }}
        volumeMounts:
        - name: valkey-data
          mountPath: /data
        {{- end }}
        lifecycle:
          preStop:
            exec:
              command:
                - init-stack
                - /bin/bash
                - -c
                - /scripts/prestop-sentinel.sh
      - name: drycc-valkey-metrics
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/valkey:{{ .Values.imageTag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 10 }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 10 }}
        {{- else }}
        command:
        - init-stack
        args:
        - redis_exporter
        {{- end }}
        ports:
        - containerPort: 9121
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: valkey-creds
              key: password
        startupProbe:
          initialDelaySeconds: 10
          tcpSocket:
              port: 9121
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 15
          successThreshold: 1
        livenessProbe:
          initialDelaySeconds: 5
          httpGet:
            path: /
            port: 9121
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
        readinessProbe:
          initialDelaySeconds: 5
          httpGet:
            path: /
            port: 9121
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: valkey-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
  {{- end }}
